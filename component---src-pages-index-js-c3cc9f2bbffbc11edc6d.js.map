{"version":3,"sources":["webpack:///./src/components/ObjectTile/ObjectTile.js","webpack:///./src/components/Objects/Objects.js","webpack:///./src/components/Search/Search.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/config.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/SocialBar/SocialBar.js","webpack:///./src/components/TopBar/TopBar.js","webpack:///./src/components/layout.js"],"names":["ObjectTile","React","Component","constructor","props","super","this","state","object","isLoaded","render","react_default","a","createElement","className","href","url","style","backgroundImage","images","thumbnail","name","Objects","objects","currentPage","hasMore","getObjects","bind","componentDidMount","page","fetch","config","recent_objects_url","then","res","json","result","items","setState","concat","error","renderSkeleton","blocks","Array","from","length","x","i","react_content_loader_es","key","height","width","speed","primaryColor","secondaryColor","y","rx","ry","tiles","map","components_ObjectTile_ObjectTile","react_infinite_scroller_default","pageStart","loadMore","loader","useWindow","threshold","adaptSuggestions","value","item","image","designer","getSuggestionValue","suggestion","renderSuggestion","alt","src","Search","_defineProperty","event","newValue","suggester_url","suggestions","console","log","inputProps","placeholder","onChange","dist_default","onSuggestionsFetchRequested","onSuggestionsClearRequested","ScanTheWorld","layout","seo","title","components_Search_Search","components_Objects_Objects","module","exports","m","default","preferDefault","require","access_token","myminifactory_url","logo_url","social_links","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","defaultProps","propTypes","PropTypes","string","arrayOf","isRequired","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","_loader__WEBPACK_IMPORTED_MODULE_3__","ProdPageRenderer","location","pageResources","getResourcesForPathnameSync","pathname","InternalPageRenderer","shape","StaticQueryContext","createContext","StaticQuery","Consumer","staticQueryData","query","children","func","SocialBar","links","renderLinks","link","icon","toLowerCase","index_esm","MYMINIFACTORY_URL","LOGO_URL","TopBar","allMarkdownRemark","edges","node","push","gatsby_link_default","to","frontmatter","path","_3776865759","Layout","Fragment","components_TopBar_TopBar","components_SocialBar_SocialBar","_755544856"],"mappings":"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","file":"component---src-pages-index-js-c3cc9f2bbffbc11edc6d.js","sourcesContent":["\nimport './ObjectTile.scss'\n\nimport React from 'react';\n\nclass ObjectTile extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            object: props.object ? props.object : {},\n            isLoaded: false\n        };\n    }\n\n    render() {\n        return (\n            <a className=\"object-tile-a\" href={this.state.object.url} >\n                <div className=\"object-tile\" style={{backgroundImage: `url(${this.state.object.images[0].thumbnail.url})`}}>\n                    <div className=\"info\">\n                        <p>{this.state.object.name}</p>\n                    </div>\n                </div>\n            </a>\n        );\n    }\n\n}\n\nexport default ObjectTile;","\nimport './Objects.scss'\n\nimport config from '../../config';\nimport React from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ContentLoader from \"react-content-loader\"\n\nimport ObjectTile from '../ObjectTile/ObjectTile'\n\nclass Objects extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            objects: props.objects ? props.objects : [],\n            isLoaded: false,\n            currentPage: 0,\n            hasMore: true\n        };\n        this.getObjects = this.getObjects.bind(this)        \n    }\n\n    componentDidMount() {\n        this.getObjects();\n    }\n\n    getObjects(page) {\n        fetch(config.recent_objects_url + \"&page=\" + page)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result.items){\n                        this.setState({\n                            isLoaded: true,\n                            objects: this.state.objects.concat(result.items)\n                        });\n                    } else {\n                        this.setState({\n                            hasMore: false,\n                        });\n                    }\n                },\n                (error) => {\n                    this.setState({\n                        hasMore: false,\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n\n    renderSkeleton() {\n        const blocks = Array.from({ length: 16 }, (x, i) => (\n            <ContentLoader\n                key={i}\n                height={230}\n                width={230}\n                speed={2}\n                primaryColor=\"#f3f3f3\"\n                secondaryColor=\"#ecebeb\"\n            >\n                <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"230\" height=\"230\" />\n            </ContentLoader>\n        ));\n\n        return (\n        <div className=\"loader\" >\n            {blocks}\n        </div>)\n    }\n\n    render() {\n\n        const tiles = this.state.objects.map((object, i) => {\n            return(<ObjectTile \n                key={i}\n                object={object}\n            />)\n        })\n\n        if (this.state.isLoaded && this.state.objects.length === 0){\n            return (<p>No objects found :(<br/>Try reloading the page</p>);\n        }\n\n        return (\n            <InfiniteScroll\n                className=\"tiles\"\n                pageStart={0}\n                loadMore={this.getObjects}\n                hasMore={this.state.hasMore}\n                loader={this.renderSkeleton()}\n                useWindow={true}\n                threshold={400}\n            >\n            {tiles}\n            </InfiniteScroll>\n        );\n    }\n\n}\n\nexport default Objects;","import './Search.scss'\n\nimport React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport config from '../../config';\n\nconst adaptSuggestions = value => {\n    return value.map(item =>\n      ({ \n          name: item[1],\n          image: item[2],\n          designer: item[3],\n          url: item[4]\n      })\n  );\n};\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => (\n  <div className=\"search-suggestion\" >\n    <a href={suggestion.url}>\n    <img className=\"image\" alt=\"suggested object\" src={suggestion.image}/>\n    <div className=\"text\" >\n        {suggestion.name}<br/>\n        {suggestion.designer}\n    </div>\n    </a>\n  </div>\n);\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  }\n\n  onChange = (event, { newValue }) => {\n    this.setState({\n      value: newValue\n    });\n  };\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    \n      fetch(config.suggester_url + \"/\" + value + \"?cat=112\")\n          .then(res => res.json())\n          .then(\n              (result) => {\n                  this.setState({\n                      suggestions: adaptSuggestions(result)\n                  });\n                },\n                (error) => {\n                  console.log('error')\n              }\n          )\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  render() {\n    const { value, suggestions } = this.state;\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n      placeholder: 'Search for an object',\n      value,\n      onChange: this.onChange\n    };\n\n    return (\n      <Autosuggest\n        suggestions={suggestions}\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n        getSuggestionValue={getSuggestionValue}\n        renderSuggestion={renderSuggestion}\n        inputProps={inputProps}\n      />\n    );\n  }\n}\n\nexport default Search;","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport './index.scss';\nimport Objects from '../components/Objects/Objects';\nimport Search from '../components/Search/Search';\n\nconst ScanTheWorld = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <div className=\"content\">\n      <Search />\n      <div className=\"scan-the-world\">\n        <div className=\"intro\">\n          <h1><b>scan</b> the <i>world</i></h1>\n          <p>Scan The World is a movement archive objects of cultural significance using 3D scanning technologies, producing an extensive platform of content suitable for 3D printing.</p>\n        </div>\n        <Objects />\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default ScanTheWorld","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","const config = {\n    access_token: null,\n    myminifactory_url: \"https://www.myminifactory.com\",\n    logo_url: \"https://www.myminifactory.com/images/logo_mobile.png\",\n    recent_objects_url: \"https://www.myminifactory.com/api/v2/search?q=&cat=112&sort=date&per_page=16&light=1\",\n    suggester_url: \"https://www.myminifactory.com/search/search-suggester\",\n    social_links: [\n        {\n            name: \"Instagram\",\n            url: \"https://www.instagram.com/scantheworld\"\n        },\n        {\n            name: \"Twitter\",\n            url: \"https://twitter.com/Scan_The_World\"\n        },\n        {\n            name: \"Medium\",\n            url: \"https://medium.com/scantheworld\"\n        }\n    ]\n};\n\nexport default config;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n  title: `Scan The World`,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import './SocialBar.scss'\n\nimport React, { Component } from 'react';\nimport { FaTwitter } from 'react-icons/fa';\nimport { FaInstagram } from 'react-icons/fa';\nimport { FaMedium } from 'react-icons/fa';\nimport config from '../../config';\n\nclass SocialBar extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            links: props.links ? props.links : config.social_links,\n        };\n    }\n\n    renderLinks() {\n        const renderedLinks = this.state.links.map((link, i) => {\n\n            let icon = null;\n            switch (link.name.toLowerCase()) {\n                case 'twitter':\n                    icon = <FaTwitter />;\n                break;\n                case 'medium':\n                    icon = <FaMedium />;\n                break;\n                case 'instagram':\n                    icon = <FaInstagram />;\n                break;\n                default:\n                    icon = <FaTwitter />;\n                break;\n            }\n            return (<li key={i} className=\"link-item\" title={link.name} ><a href={link.url} >{icon}</a></li>)\n        })\n        return renderedLinks;\n    }\n    \n    render() {\n        return (\n            <div className=\"social-bar\">\n                <p className=\"social\" >social</p>\n                <ul className=\"links\" >\n                    { this.renderLinks() }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default SocialBar;","import './TopBar.scss'\n\nimport React, { Component } from 'react';\nimport { graphql, StaticQuery, Link } from 'gatsby'\n\n\nconst MYMINIFACTORY_URL = \"https://www.myminifactory.com\";\nconst LOGO_URL = \"https://www.myminifactory.com/favicon.png\";\n\nclass TopBar extends Component {\n    \n    renderLinks() {\n        return (\n        <StaticQuery\n            query={graphql`\n                query {\n                    allMarkdownRemark {\n                    totalCount\n                    edges {\n                        node {\n                        id\n                        frontmatter {\n                            title\n                            path\n                        }\n                        excerpt\n                        }\n                    }\n                    }\n                }\n                `}\n            render={data => {\n                let links = [\n                    <li key={0} className=\"link-item\" ><a href={'/scan-the-world'} >Home</a></li>\n                ];\n                data.allMarkdownRemark.edges.map(({ node }, i) => {\n                    return links.push(\n                        <li key={i + 1} className=\"link-item\" ><Link to={node.frontmatter.path}>{node.frontmatter.title}</Link></li>\n                    )\n                })\n                return links;\n            }}\n        />)\n    }\n\n    render() {\n\n        return (\n            <div className=\"top-bar\">\n                <a href={MYMINIFACTORY_URL}><img className=\"logo\" src={LOGO_URL} alt=\"MyMiniFactory Logo\" /></a>\n                <ul className=\"links\" >\n                    { this.renderLinks() }\n                </ul>\n            </div>);\n    }\n}\n\n\nexport default TopBar;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport SocialBar from './SocialBar/SocialBar';\nimport TopBar from './TopBar/TopBar';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <React.Fragment>\n        <TopBar/>\n        <SocialBar />\n        <main>{children}</main>\n      </React.Fragment>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}